name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ['3.13']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y postgresql-client

    - name: Set up Conda environment
      uses: conda-incubator/setup-miniconda@v3
      with:
        environment-file: requirements.yaml
        activate-environment: TrendOps
        python-version: ${{ matrix.python-version }}
        auto-activate-base: false

    - name: Install additional development dependencies
      shell: bash -l {0}
      run: |
        conda activate TrendOps
        pip install pre-commit

    - name: Cache pre-commit hooks
      uses: actions/cache@v3
      with:
        path: ~/.cache/pre-commit
        key: ${{ runner.os }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pre-commit-

    - name: Install pre-commit hooks
      shell: bash -l {0}
      run: |
        conda activate TrendOps
        pre-commit install

    - name: Run pre-commit on all files
      shell: bash -l {0}
      run: |
        conda activate TrendOps
        pre-commit run --all-files

    - name: Check Python syntax
      shell: bash -l {0}
      run: |
        conda activate TrendOps
        python -m py_compile $(find . -name "*.py" -not -path "./_*" -not -path "./.*")

    - name: Run type checking with mypy
      shell: bash -l {0}
      run: |
        conda activate TrendOps
        mypy --config-file pyproject.toml $(find . -name "*.py" -not -path "./_*" -not -path "./.*" -not -path "./__pycache__/*")
      continue-on-error: true

    - name: Check import sorting with isort
      shell: bash -l {0}
      run: |
        conda activate TrendOps
        isort --check-only --diff .

    - name: Check code formatting with black
      shell: bash -l {0}
      run: |
        conda activate TrendOps
        black --check --diff .

    - name: Run flake8 linting
      shell: bash -l {0}
      run: |
        conda activate TrendOps
        flake8 .

    - name: Check Jupyter notebooks with nbqa
      shell: bash -l {0}
      run: |
        conda activate TrendOps
        if ls *.ipynb 1> /dev/null 2>&1; then
          nbqa black --check --diff .
          nbqa isort --check-only --diff .
          nbqa flake8 .
        else
          echo "No Jupyter notebooks found, skipping nbqa checks"
        fi

  security-scan:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'

    - name: Install security scanning tools
      run: |
        pip install bandit safety

    - name: Run bandit security scan
      run: |
        bandit -r . -f json -o bandit-report.json || true
        bandit -r . || true
      continue-on-error: true

    - name: Run safety check for known vulnerabilities
      run: |
        safety check --json --output safety-report.json || true
        safety check || true
      continue-on-error: true

    - name: Upload security reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json
        retention-days: 30

  dependency-check:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'

    - name: Check for dependency conflicts
      uses: conda-incubator/setup-miniconda@v3
      with:
        environment-file: requirements.yaml
        activate-environment: TrendOps
        python-version: '3.13'
        auto-activate-base: false

    - name: Verify environment creation
      shell: bash -l {0}
      run: |
        conda activate TrendOps
        conda list
        pip list
